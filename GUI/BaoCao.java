/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import DAL.Services.JDBCHelper;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class BaoCao extends javax.swing.JFrame {

    Connection con;

    /**
     * Creates new form BaoCao
     */
    public BaoCao() {
        initComponents();
//        con = JDBCHelper.ketnoi();
        setLocationRelativeTo(this);
        getContentPane().setBackground(Color.white);

    }
 public void changeColor(JButton hover, Color rand) {
        hover.setBackground(rand);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtemail = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnbaocao = new javax.swing.JButton();
        lbltime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        txtemail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtemail.setForeground(new java.awt.Color(25, 29, 74));
        txtemail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(5, 10, 46)));
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(5, 10, 46));
        jLabel1.setText("Mời bạn nhập mail của sếp!");

        btnbaocao.setBackground(new java.awt.Color(25, 29, 74));
        btnbaocao.setForeground(new java.awt.Color(25, 29, 74));
        btnbaocao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/report1.png"))); // NOI18N
        btnbaocao.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 29, 74), 30));
        btnbaocao.setBorderPainted(false);
        btnbaocao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnbaocao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnbaocaoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnbaocaoMouseExited(evt);
            }
        });
        btnbaocao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbaocaoActionPerformed(evt);
            }
        });

        lbltime.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbltime.setForeground(new java.awt.Color(25, 29, 74));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbltime, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(btnbaocao, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnbaocao, javax.swing.GroupLayout.PREFERRED_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(lbltime, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void btnbaocaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbaocaoActionPerformed
        // TODO add your handling code here:
        if (txtemail.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Mời bạn nhập email của sếp!");
        } else {
            JOptionPane.showMessageDialog(this, "Mời bạn chờ trong giây lát!");
            run();
        }

    }//GEN-LAST:event_btnbaocaoActionPerformed

    private void btnbaocaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbaocaoMouseEntered
       changeColor(btnbaocao, new Color(102, 0, 102));
    }//GEN-LAST:event_btnbaocaoMouseEntered

    private void btnbaocaoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbaocaoMouseExited
       changeColor(btnbaocao, new Color(25, 29, 74));
    }//GEN-LAST:event_btnbaocaoMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaoCao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaoCao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbaocao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbltime;
    private javax.swing.JTextField txtemail;
    // End of variables declaration//GEN-END:variables
     String thang;
    String doanhthu;
    String soluong;

    public void tk() {
        try {
            String sql = "select MONTH(HoaDon.NgayThanhToan) as thang, sum(HoaDon.TongTien) as tongtien\n"
                    + "                                  from HoaDon where MONTH(HoaDon.NgayThanhToan) = MONTH(getdate())\n"
                    + "                                 GROUP BY MONTH(HoaDon.NgayThanhToan) ";
            PreparedStatement ps = con.prepareStatement(sql);
            ;
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                thang = rs.getString(1);
                doanhthu = rs.getString(2);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
//    String bc;

    public void tk2() {
        try {
            String sql = "select count(ChiTietHoaDon.MaImei) as soluong\n"
                    + "from HoaDon, ChiTietHoaDon\n"
                    + "where HoaDon.MaHD = ChiTietHoaDon.MaHD and MONTH(HoaDon.NgayThanhToan) = month( GETDATE())\n"
                    + "GROUP BY MONTH(HoaDon.NgayThanhToan)";
            PreparedStatement ps = con.prepareStatement(sql);
            ;
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                doanhthu = (String) rs.getString(1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void run() {
        tk();
        tk2();
        try {
            String to = txtemail.getText();
            Random rand = new Random();
            //randomCode = rand.nextInt(999999);
            String host = "smtp.gmail.com";
            String user = "cuongndph14605@fpt.edu.vn";
            String pass = "Duycuong1";
            String subject = "Reseting Code";
            String message = "Báo cáo sếp! \n" + " Doanh thu và tổng sản phẩm bán được trong tháng \n" + thang + " là: "+ soluong+": "+"Máy \n"  + doanhthu + " " + " vnd";//+ randomCode;
            boolean sessionDebug = false;
            Properties pros = System.getProperties();
            pros.put("mail.smtp.starttls.enable", "true");
            pros.put("mail.smtp.starttls.required", "true");
            pros.put("mail.smtp.host", host);
            pros.put("mail.smtp.port", "587");
            pros.put("mail.smtp.auth", "true");
            java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
            Session mailSession = Session.getDefaultInstance(pros, null);
            mailSession.setDebug(sessionDebug);
            Message msg = new MimeMessage(mailSession);
            msg.setFrom(new InternetAddress(user));
            InternetAddress[] address = {new InternetAddress(to)};
            msg.setRecipients(Message.RecipientType.TO, address);
            msg.setSubject(subject);
            msg.setText(message);
            Transport transport = mailSession.getTransport("smtp");
            transport.connect(host, user, pass);
            transport.sendMessage(msg, msg.getAllRecipients());
            transport.close();
            JOptionPane.showMessageDialog(null, "Mã đã được gửi đến email của bạn mời bạn kiểm tra");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Mail này không tồn tại!");
        }
    }

}
