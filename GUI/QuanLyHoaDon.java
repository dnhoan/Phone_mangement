/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.Models.BusHoaDon;
import BUS.Models.BusImeiModel;
import BUS.Models.BusSanPham;
import BUS.Services.BusImeiService;
import BUS.Services.HoaDonService;
import BUS.Services.SanPhamService;
import DAL.Models.DalImeiModel;
import GUI.Models.CartModel;
import static GUI.QuanLyBanHang.currentMahd;
import static GUI.QuanLyBanHang.tblHoaDon;
import GUI.Services.ButtonColumn;
import GUI.Services.MessageService;
import GUI.Services.UtilityService;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QuanLyHoaDon extends javax.swing.JInternalFrame {

    Icon iconBackUp = new ImageIcon(getClass().getResource("/icon/curve-arrow.png"));
    Icon iconDelete = new ImageIcon(getClass().getResource("/icon/bin.png"));

    public QuanLyHoaDon() {
        initComponents();
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        Toolkit t = Toolkit.getDefaultToolkit();
        Dimension d = t.getScreenSize();
        int h = d.height;
        int w = d.width;
        this.setSize(w, h);
        this.init();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        txtSearchHD = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cboStatusGiaoHang = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblImei = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnTraHang = new javax.swing.JButton();
        btnMoiForm = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboStatusHoadon = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "MaHD", "Khách hàng + SĐT", "Mã nv", "Ngày tạo", "Ngày thanh toán", "SL", "Tổng tiền hàng", "Địa chỉ nhận hàng", "Phí vận chuyển", "Trạng thái giao hàng", "Thành tiền", "Tiền khách trả", "Xóa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.setRowHeight(40);
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);
        if (tblHoaDon.getColumnModel().getColumnCount() > 0) {
            tblHoaDon.getColumnModel().getColumn(0).setMinWidth(0);
            tblHoaDon.getColumnModel().getColumn(0).setMaxWidth(0);
            tblHoaDon.getColumnModel().getColumn(1).setMinWidth(200);
            tblHoaDon.getColumnModel().getColumn(1).setMaxWidth(200);
            tblHoaDon.getColumnModel().getColumn(2).setMinWidth(60);
            tblHoaDon.getColumnModel().getColumn(2).setMaxWidth(60);
            tblHoaDon.getColumnModel().getColumn(3).setMinWidth(100);
            tblHoaDon.getColumnModel().getColumn(3).setMaxWidth(100);
            tblHoaDon.getColumnModel().getColumn(4).setMinWidth(100);
            tblHoaDon.getColumnModel().getColumn(4).setMaxWidth(100);
            tblHoaDon.getColumnModel().getColumn(5).setMinWidth(40);
            tblHoaDon.getColumnModel().getColumn(5).setMaxWidth(40);
            tblHoaDon.getColumnModel().getColumn(7).setMinWidth(250);
            tblHoaDon.getColumnModel().getColumn(7).setMaxWidth(250);
            tblHoaDon.getColumnModel().getColumn(12).setMinWidth(40);
            tblHoaDon.getColumnModel().getColumn(12).setMaxWidth(40);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 82, 1320, -1));

        txtSearchHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchHDKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearchHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 34, 377, 36));

        jLabel1.setText("Trạng thái giao hàng");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, -1, -1));

        cboStatusGiaoHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Đã giao hàng", "Chưa giao hàng", "Đang giao" }));
        cboStatusGiaoHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboStatusGiaoHangItemStateChanged(evt);
            }
        });
        getContentPane().add(cboStatusGiaoHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 229, 36));

        jButton1.setText("Xuất file Excel");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 40, 114, 36));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Masp", "Tên sp", "Giá bán", "SL", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);
        if (tblSanPham.getColumnModel().getColumnCount() > 0) {
            tblSanPham.getColumnModel().getColumn(0).setMinWidth(0);
            tblSanPham.getColumnModel().getColumn(0).setMaxWidth(0);
            tblSanPham.getColumnModel().getColumn(2).setMinWidth(120);
            tblSanPham.getColumnModel().getColumn(2).setMaxWidth(120);
            tblSanPham.getColumnModel().getColumn(3).setMinWidth(50);
            tblSanPham.getColumnModel().getColumn(3).setMaxWidth(50);
            tblSanPham.getColumnModel().getColumn(4).setMinWidth(120);
            tblSanPham.getColumnModel().getColumn(4).setMaxWidth(120);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 561, -1, 190));

        tblImei.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "MaImei", "Imei"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblImei.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblImeiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblImei);
        if (tblImei.getColumnModel().getColumnCount() > 0) {
            tblImei.getColumnModel().getColumn(0).setMinWidth(0);
            tblImei.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 570, 270, 170));

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        txtGhiChu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGhiChuKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(txtGhiChu);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 570, 310, 110));

        btnTraHang.setText("Trả hàng");
        btnTraHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraHangActionPerformed(evt);
            }
        });
        getContentPane().add(btnTraHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 700, 120, 40));

        btnMoiForm.setText("Mới form");
        btnMoiForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiFormActionPerformed(evt);
            }
        });
        getContentPane().add(btnMoiForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 700, 100, 40));

        jLabel2.setText("Sản phẩm");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 80, -1));

        jLabel3.setText("Imei");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 540, -1, -1));

        jLabel4.setText("Ghi chú");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 540, -1, -1));

        cboStatusHoadon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Chưa thanh toán", "Đã thanh toán", "Đã xóa" }));
        cboStatusHoadon.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboStatusHoadonItemStateChanged(evt);
            }
        });
        getContentPane().add(cboStatusHoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 34, 229, 36));

        jLabel5.setText("Tìm kiếm");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabel6.setText("Trạng thái hóa đơn");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboStatusHoadonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboStatusHoadonItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            currentSelectedHoaDon = cboStatusHoadon.getSelectedIndex();
            filterHoaDon();
        }
    }//GEN-LAST:event_cboStatusHoadonItemStateChanged

    private void cboStatusGiaoHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboStatusGiaoHangItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            currentSelectedGiaoHang = cboStatusGiaoHang.getSelectedIndex();
            filterHoaDon();
        }
    }//GEN-LAST:event_cboStatusGiaoHangItemStateChanged

    private void txtSearchHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchHDKeyReleased
        this.getDataHoaDon();
        filterHoaDon();
    }//GEN-LAST:event_txtSearchHDKeyReleased

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        if (evt.getClickCount() == 2) {
            int row = tblHoaDon.getSelectedRow();
            this.currentMaHd = (int) tblHoaDon.getValueAt(row, 0);
            this.getDataSanPhamByMahd();
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        if (evt.getClickCount() == 2) {
            int row = tblSanPham.getSelectedRow();
            this.currentMactsp = (int) tblSanPham.getValueAt(row, 0);
            this.getDataImeiByMactsp();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnMoiFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiFormActionPerformed
        clearForm();
    }//GEN-LAST:event_btnMoiFormActionPerformed

    private void txtGhiChuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGhiChuKeyReleased
        if(!txtGhiChu.getText().trim().isBlank() && !txtGhiChu.getText().trim().isEmpty()) {
            btnTraHang.setEnabled(true);
        } else {
            btnTraHang.setEnabled(false);
        }
    }//GEN-LAST:event_txtGhiChuKeyReleased

    private void btnTraHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraHangActionPerformed
        traHang();
    }//GEN-LAST:event_btnTraHangActionPerformed

    private void tblImeiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblImeiMouseClicked
       txtGhiChu.setEditable(true);
    }//GEN-LAST:event_tblImeiMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoiForm;
    private javax.swing.JButton btnTraHang;
    private javax.swing.JComboBox<String> cboStatusGiaoHang;
    private javax.swing.JComboBox<String> cboStatusHoadon;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblImei;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtSearchHD;
    // End of variables declaration//GEN-END:variables
    int currentSelectedHoaDon = 0;
    int currentSelectedGiaoHang = 0;
    int currentMaHd = -1;
    int currentMactsp = -1;
    int currentImei = -1;
    HoaDonService hoaDonService = new HoaDonService();
    SanPhamService sanPhamService = new SanPhamService();
    DefaultTableModel modelHoaDon;
    DefaultTableModel modelSanPham;
    DefaultTableModel modelImei;
    List<BusHoaDon> listHoaDon = new ArrayList<>();
    List<BusHoaDon> listFilterHoaDon = new ArrayList<>();
    List<CartModel> listCart = new ArrayList<>();
    List<DalImeiModel> listImei = new ArrayList<>();

    void init() {
        buttonRemoveHoaDon();
        getDataHoaDon();
        filterHoaDon();
    }

    void getDataHoaDon() {
        try {
            String term = this.txtSearchHD.getText();
            this.listHoaDon = this.hoaDonService.getAllHoaDon(term);
        } catch (Exception e) {
        }
    }

    void fillTableHoaDon(List<BusHoaDon> listShow) {
        modelHoaDon = (DefaultTableModel) tblHoaDon.getModel();
        modelHoaDon.setRowCount(0);
        if (listShow != null) {
            listShow.forEach((hd) -> {
                String giaoHang = "";
                switch (hd.getTrangThaiGiaoHang()) {
                    case 0: {
                        giaoHang = "Chưa giao";
                    }
                    break;
                    case 2: {
                        giaoHang = "Đang giao";
                    }
                    break;
                    case 1: {
                        giaoHang = "Đã giao";
                    }
                    break;
                }
                modelHoaDon.addRow(new Object[]{
                    hd.getMahd(),
                    hd.getKhachHangModel().getTenKH() + hd.getKhachHangModel().getSDT(),
                    hd.getNhanVienModel().getMaNV(),
                    hd.getNgayTao(),
                    hd.getNgayThanhToan(),
                    hd.getSoLuong(),
                    UtilityService.toVnd(hd.getTongTien()),
                    hd.getDiaChiNhanHang(),
                    hd.getPhiVanChuyen(),
                    giaoHang,
                    UtilityService.toVnd(hd.getTongTien() + hd.getPhiVanChuyen()),
                    UtilityService.toVnd(hd.getTienKhachTra()),
                    this.currentSelectedHoaDon == 3 ? iconBackUp : iconDelete
                });
            });
        }
        clearForm();
    }

    void getDataSanPhamByMahd() {
        try {
            this.listCart = sanPhamService.selectSpByMahd(currentMaHd);
            fillTableSanPham();
        } catch (Exception e) {
        }
    }

    void fillTableSanPham() {
        modelSanPham = (DefaultTableModel) tblSanPham.getModel();
        modelSanPham.setRowCount(0);
        this.listCart.forEach(sp -> {
            modelSanPham.addRow(new Object[]{
                sp.getMactsp(),
                sp.getTensp(),
                UtilityService.toVnd(sp.getGia()),
                sp.getSoLuong(),
                UtilityService.toVnd(sp.getTongTien())
            });
        });
    }

    void getDataImeiByMactsp() {
        try {
            listImei = BusImeiService.getImeisByMactspAndMahd(currentMactsp, currentMaHd);
            fillTableImei();
        } catch (Exception e) {
        }

    }

    void fillTableImei() {
        modelImei = (DefaultTableModel) tblImei.getModel();
        modelImei.setRowCount(0);
        this.listImei.forEach(imei -> {
            modelImei.addRow(new Object[]{
                imei.getMaImei(),
                imei.getTenImei()
            });
        });
    }

    void traHang() {
        if(txtGhiChu.getText().length() > 30) {
            
        } else {
            MessageService.alert(this, "Vui lòng nhập lý do trả hàng tối thiểu 30 ký tự");
        }
    }

    void clearForm() {
        currentMactsp = -1;
        currentImei = -1;
        txtSearchHD.setEditable(false);
        tblImei.setRowSelectionInterval(0, 0);
        tblSanPham.setRowSelectionInterval(0, 0);
        modelImei = (DefaultTableModel) tblImei.getModel();
        modelImei.setRowCount(0);
        txtGhiChu.setText("");
        btnTraHang.setEnabled(false);
    }

    void exportFileExcel() {

    }

    void filterHoaDon() {
        this.listFilterHoaDon = this.listHoaDon;
        switch (this.currentSelectedHoaDon) {
            case 0: { // tat ca
            }
            break;
            case 1: { // chua thanh toan
                this.listFilterHoaDon = this.listFilterHoaDon.stream().filter(hd -> hd.getNgayThanhToan() == null).toList();
            }
            break;
            case 2: { // da thanh toan
                this.listFilterHoaDon = this.listFilterHoaDon.stream().filter(hd -> hd.getTienKhachTra() == hd.getPhiVanChuyen() + hd.getTongTien()).toList();
            }
            break;
            case 3: { // da xoa
                this.listFilterHoaDon = this.listFilterHoaDon.stream().filter(hd -> !hd.isTrangThai()).toList();
            }
            break;
        }
        switch (this.currentSelectedGiaoHang) {
            case 0: { // tat ca
//                this.listFilterHoaDon = this.listHoaDon;
            }
            break;
            case 1: { // da giao hang
                this.listFilterHoaDon = this.listFilterHoaDon.stream().filter(hd -> hd.getTrangThaiGiaoHang() == 1).toList();
            }
            break;
            case 2: { // chua giao hang
                this.listFilterHoaDon = this.listFilterHoaDon.stream().filter(hd -> hd.getTrangThaiGiaoHang() == 0).toList();
            }
            break;
            case 3: { // dang giao
                this.listFilterHoaDon = this.listFilterHoaDon.stream().filter(hd -> hd.getTrangThaiGiaoHang() == 2).toList();
            }
            break;
        }
        fillTableHoaDon(listFilterHoaDon);
    }

    private void buttonRemoveHoaDon() {
        Action add = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = tblHoaDon.getSelectedRow();
                currentMahd = (int) tblHoaDon.getValueAt(row, 0);
                if (currentSelectedHoaDon == 3) {
                    if (MessageService.confirm(null, "Co muon khoi phuc hoa don ko")) {
                        hoaDonService.updateStatus(1, currentMahd);
                        MessageService.alert(null, "back up  ok");
                    }
                } else {
                    if (MessageService.confirm(null, "Co muon xoa hoa don ko")) {
                        hoaDonService.updateStatus(0, currentMahd);
                        MessageService.alert(null, "Xoa ok");
                    }
                }
                getDataHoaDon();
            }
        };
        ButtonColumn buttonColumn = new ButtonColumn(tblHoaDon, add, 12);
        buttonColumn.setMnemonic(KeyEvent.VK_D);
    }
}
