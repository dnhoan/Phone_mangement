/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.Models.BusManHinhModel;
import BUS.Services.ManHinhService;
import GUI.Services.IEditService;
import GUI.Services.MessageService;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QLManHinh extends javax.swing.JFrame implements IEditService<BusManHinhModel> {

    ManHinhService mhser = new ManHinhService();
    int row = -1;

    /**
     * Creates new form QLManHinh
     */
    public QLManHinh() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtLoaiMH = new javax.swing.JTextField();
        rdoDKD = new javax.swing.JRadioButton();
        rdoNKD = new javax.swing.JRadioButton();
        txtKichThuoc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoiForm4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDKD = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        d = new javax.swing.JScrollPane();
        tblNKD = new javax.swing.JTable();
        cboDPG = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Màn hình");

        jLabel1.setText("Loại màn hình");

        buttonGroup1.add(rdoDKD);
        rdoDKD.setSelected(true);
        rdoDKD.setText("Đang kinh doanh");

        buttonGroup1.add(rdoNKD);
        rdoNKD.setText("Ngừng kinh doanh");

        jLabel2.setText("Kích thước");

        jLabel3.setText("Trạng thái");

        jPanel53.setLayout(new java.awt.GridLayout(1, 0, 3, 0));

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel53.add(btnThem);

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel53.add(btnSua);

        btnLamMoiForm4.setText("Làm mới");
        btnLamMoiForm4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiForm4ActionPerformed(evt);
            }
        });
        jPanel53.add(btnLamMoiForm4);

        jLabel4.setText("Inch");

        jLabel5.setText("Độ phân giải");

        tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabsMouseClicked(evt);
            }
        });

        tblDKD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã MH", "Loại màn hình", "Kích thước", "Độ phân giải", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDKD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDKDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDKD);
        if (tblDKD.getColumnModel().getColumnCount() > 0) {
            tblDKD.getColumnModel().getColumn(0).setMinWidth(50);
            tblDKD.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Đang kinh doanh", jPanel1);

        tblNKD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã MH", "Loại màn hình", "Kích thước", "Độ phân giải", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNKD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNKDMouseClicked(evt);
            }
        });
        d.setViewportView(tblNKD);
        if (tblNKD.getColumnModel().getColumnCount() > 0) {
            tblNKD.getColumnModel().getColumn(0).setMinWidth(50);
            tblNKD.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("Ngừng kinh doanh", jPanel3);

        cboDPG.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HD", "HD+", "WXGA", "FULL HD", "FULL HD+", "QHD", "QHD+", "UHD" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cboDPG, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(txtLoaiMH, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(rdoDKD, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdoNKD, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtKichThuoc, txtLoaiMH});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLoaiMH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(9, 9, 9)
                        .addComponent(cboDPG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoDKD)
                            .addComponent(rdoNKD))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDKDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDKDMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblDKD.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblDKDMouseClicked

    private void tblNKDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNKDMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblNKD.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblNKDMouseClicked

    private void tabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseClicked
        if (tabs.getSelectedIndex() == 0) {
            clearForm();
            updateStatus();

        } else {
            clearForm();
            updateStatus2();
        }
    }//GEN-LAST:event_tabsMouseClicked

    private void btnLamMoiForm4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiForm4ActionPerformed
        clearForm();
    }//GEN-LAST:event_btnLamMoiForm4ActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (tabs.getSelectedIndex() == 0) {
            update();
        } else {
            update2();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLManHinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLManHinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLManHinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLManHinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLManHinh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoiForm4;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboDPG;
    private javax.swing.JScrollPane d;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoDKD;
    private javax.swing.JRadioButton rdoNKD;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblDKD;
    private javax.swing.JTable tblNKD;
    private javax.swing.JTextField txtKichThuoc;
    private javax.swing.JTextField txtLoaiMH;
    // End of variables declaration//GEN-END:variables

    @Override
    public void init() {
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.fillTableDKD();
        this.fillTableNKD();
        updateStatus();
        row = -1;
    }

    @Override
    public BusManHinhModel getForm() {
        BusManHinhModel busMhModel = new BusManHinhModel();
        busMhModel.setLoaiManHinh(txtLoaiMH.getText());
        busMhModel.setKichThuoc(Float.parseFloat(txtKichThuoc.getText()));
        busMhModel.setDoPhanGiaiManHinh(cboDPG.getSelectedItem() + "");
        busMhModel.setTrangThai(rdoDKD.isSelected());
        return busMhModel;
    }

    @Override
    public void setForm(BusManHinhModel model) {
        txtLoaiMH.setText(model.getLoaiManHinh());
        txtKichThuoc.setText(model.getKichThuoc() + "");
        cboDPG.setSelectedItem(model.getDoPhanGiaiManHinh());
        rdoDKD.setSelected(model.isTrangThai());
        rdoNKD.setSelected(!model.isTrangThai());

    }

    @Override
    public void updateStatus() {
        boolean edit = (this.row >= 0);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnLamMoiForm4.setEnabled(edit);
    }

    public void updateStatus2() {
        boolean edit = (this.row >= 0);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnLamMoiForm4.setEnabled(edit);
    }

    @Override
    public void insert() {
        BusManHinhModel busmhModel = this.getForm();
        try {
            mhser.insert(busmhModel);
            this.fillTableDKD();
            this.clearForm();
            this.updateStatus();
            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();
        }
    }

    @Override
    public void update() {

        BusManHinhModel busmhModel = this.getForm();
        String idmh = (String) tblDKD.getValueAt(this.row, 0);
        busmhModel.setMaManHinh(idmh);
        try {
            mhser.update(busmhModel);
            this.fillTableDKD();
            this.fillTableNKD();
            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();

        }
    }

    public void update2() {
        BusManHinhModel busmhModel = this.getForm();
        String idmh = (String) tblNKD.getValueAt(this.row, 0);
        busmhModel.setMaManHinh(idmh);
        try {
            mhser.update(busmhModel);
            this.fillTableNKD();
            this.fillTableDKD();
            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();
        }
    }

    @Override
    public void delete() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void edit() {
        if (tabs.getSelectedIndex() == 0) {
            String idmh = (String) tblDKD.getValueAt(this.row, 0);
            BusManHinhModel pinmodel = this.mhser.selectByID(idmh);
            setForm(pinmodel);
            updateStatus();
        } else {
            String idmh = (String) tblNKD.getValueAt(this.row, 0);
            BusManHinhModel pinmodel = this.mhser.selectByID(idmh);
            setForm(pinmodel);
            updateStatus2();

        }
    }

    @Override
    public void clearForm() {
        BusManHinhModel mhmodel = new BusManHinhModel();
        this.row = -1;
        this.setForm(mhmodel);
        this.updateStatus();
        cboDPG.setSelectedIndex(0);
    }

    @Override
    public void fillTable() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void first() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void last() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void next() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void previous() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean validateForm(boolean isEdit) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void fillTableDKD() {
        DefaultTableModel modeldkd = (DefaultTableModel) tblDKD.getModel();
        modeldkd.setRowCount(0);
        try {
            List<BusManHinhModel> listmh = mhser.selectAllKD();
            for (BusManHinhModel mh : listmh) {
                Object[] row = {mh.getMaManHinh(), mh.getLoaiManHinh(), mh.getKichThuoc(), mh.getDoPhanGiaiManHinh(), mh.isTrangThai() ? "Đang kinh doanh" : "Ngừng kinh doanh"};
                modeldkd.addRow(row);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillTableNKD() {
        DefaultTableModel modeldkd = (DefaultTableModel) tblNKD.getModel();
        modeldkd.setRowCount(0);
        try {
            List<BusManHinhModel> listmh = mhser.selectAllNKD();
            for (BusManHinhModel mh : listmh) {
                Object[] row = {mh.getMaManHinh(), mh.getLoaiManHinh(), mh.getKichThuoc(), mh.getDoPhanGiaiManHinh(), mh.isTrangThai() ? "Đang kinh doanh" : "Ngừng kinh doanh"};
                modeldkd.addRow(row);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
