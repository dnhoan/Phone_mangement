/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.Models.BusCTSanPhamModel;
import BUS.Models.BusManHinhModel;
import BUS.Services.ManHinhService;
import DAL.Services.JDBCHelper;
import GUI.Services.IEditService;
import GUI.Services.MessageService;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QLManHinh extends javax.swing.JFrame implements IEditService<BusManHinhModel> {
BusCTSanPhamModel ctsp = new BusCTSanPhamModel();
BusManHinhModel mh = new BusManHinhModel();
    ManHinhService mhser = new ManHinhService();
    int row = -1;
    Connection con = null;
    String sql= "SELECT MaManHinh from CTSANPHAM where TrangThai = 1";

    /**
     * Creates new form QLManHinh
     */
    public QLManHinh() {
        initComponents();
         getContentPane().setBackground(Color.WHITE);
         desginTable();
        init();
    }
    public void changeColor(JButton hover, Color rand) {
        hover.setBackground(rand);
    }
    public void desginTable() {
        tblDKD.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 15));
        tblDKD.getTableHeader().setOpaque(false);
        tblDKD.getTableHeader().setBackground(new Color(25, 29, 74));
       tblDKD.getTableHeader().setForeground(Color.WHITE);
        
        tblDKD.getTableHeader().setDraggedColumn(null);
        tblNKD.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 15));
      tblNKD.getTableHeader().setOpaque(false);
         tblNKD.getTableHeader().setBackground(new Color(25, 29, 74));
         tblNKD.getTableHeader().setForeground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtLoaiMH = new javax.swing.JTextField();
        rdoDKD = new javax.swing.JRadioButton();
        rdoNKD = new javax.swing.JRadioButton();
        txtKichThuoc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoiForm4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDKD = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        d = new javax.swing.JScrollPane();
        tblNKD = new javax.swing.JTable();
        cboDPG = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Màn hình");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(5, 10, 46));
        jLabel1.setText("Loại màn hình");

        txtLoaiMH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtLoaiMH.setForeground(new java.awt.Color(25, 29, 74));
        txtLoaiMH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(5, 10, 46)));

        rdoDKD.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdoDKD);
        rdoDKD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoDKD.setForeground(new java.awt.Color(25, 29, 74));
        rdoDKD.setSelected(true);
        rdoDKD.setText("Đang kinh doanh");
        rdoDKD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDKDActionPerformed(evt);
            }
        });

        rdoNKD.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdoNKD);
        rdoNKD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoNKD.setForeground(new java.awt.Color(25, 29, 74));
        rdoNKD.setText("Ngừng kinh doanh");

        txtKichThuoc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtKichThuoc.setForeground(new java.awt.Color(25, 29, 74));
        txtKichThuoc.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(5, 10, 46)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(5, 10, 46));
        jLabel2.setText("Kích thước");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(5, 10, 46));
        jLabel3.setText("Trạng thái");

        jPanel53.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        btnThem.setBackground(new java.awt.Color(25, 29, 74));
        btnThem.setForeground(new java.awt.Color(25, 29, 74));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add1.png"))); // NOI18N
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 29, 74), 30));
        btnThem.setBorderPainted(false);
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemMouseExited(evt);
            }
        });
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel53.add(btnThem);

        btnSua.setBackground(new java.awt.Color(25, 29, 74));
        btnSua.setForeground(new java.awt.Color(25, 29, 74));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/update.png"))); // NOI18N
        btnSua.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 29, 74), 30));
        btnSua.setBorderPainted(false);
        btnSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSuaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSuaMouseExited(evt);
            }
        });
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel53.add(btnSua);

        btnLamMoiForm4.setBackground(new java.awt.Color(25, 29, 74));
        btnLamMoiForm4.setForeground(new java.awt.Color(25, 29, 74));
        btnLamMoiForm4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/neww.png"))); // NOI18N
        btnLamMoiForm4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 29, 74), 30));
        btnLamMoiForm4.setBorderPainted(false);
        btnLamMoiForm4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLamMoiForm4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLamMoiForm4MouseExited(evt);
            }
        });
        btnLamMoiForm4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiForm4ActionPerformed(evt);
            }
        });
        jPanel53.add(btnLamMoiForm4);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(5, 10, 46));
        jLabel4.setText("Inch");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(5, 10, 46));
        jLabel5.setText("Độ phân giải");

        tabs.setForeground(new java.awt.Color(102, 0, 102));
        tabs.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabsMouseClicked(evt);
            }
        });

        tblDKD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblDKD.setForeground(new java.awt.Color(25, 29, 74));
        tblDKD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã MH", "Loại màn hình", "Kích thước", "Độ phân giải", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDKD.setGridColor(new java.awt.Color(25, 29, 74));
        tblDKD.setRowHeight(25);
        tblDKD.setRowMargin(0);
        tblDKD.getTableHeader().setReorderingAllowed(false);
        tblDKD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDKDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDKD);
        if (tblDKD.getColumnModel().getColumnCount() > 0) {
            tblDKD.getColumnModel().getColumn(0).setMinWidth(0);
            tblDKD.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
        );

        tabs.addTab("Đang kinh doanh", jPanel1);

        tblNKD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblNKD.setForeground(new java.awt.Color(25, 29, 74));
        tblNKD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã MH", "Loại màn hình", "Kích thước", "Độ phân giải", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNKD.setGridColor(new java.awt.Color(25, 29, 74));
        tblNKD.setRowHeight(25);
        tblNKD.setRowMargin(0);
        tblNKD.getTableHeader().setReorderingAllowed(false);
        tblNKD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNKDMouseClicked(evt);
            }
        });
        d.setViewportView(tblNKD);
        if (tblNKD.getColumnModel().getColumnCount() > 0) {
            tblNKD.getColumnModel().getColumn(0).setMinWidth(0);
            tblNKD.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(d, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(d, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
        );

        tabs.addTab("Ngừng kinh doanh", jPanel3);

        cboDPG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboDPG.setForeground(new java.awt.Color(25, 29, 74));
        cboDPG.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HD", "HD+", "WXGA", "FULL HD", "FULL HD+", "QHD", "QHD+", "UHD" }));
        cboDPG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDPGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(cboDPG, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(txtLoaiMH, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdoDKD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoNKD))
                    .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtKichThuoc, txtLoaiMH});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLoaiMH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(9, 9, 9)
                        .addComponent(cboDPG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoDKD)
                            .addComponent(rdoNKD))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDKDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDKDMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblDKD.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblDKDMouseClicked

    private void tblNKDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNKDMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblNKD.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblNKDMouseClicked

    private void tabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseClicked
        if (tabs.getSelectedIndex() == 0) {
            clearForm();
            updateStatus();

        } else {
            clearForm();
            updateStatus2();
        }
    }//GEN-LAST:event_tabsMouseClicked

    private void btnLamMoiForm4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiForm4ActionPerformed
        clearForm();
    }//GEN-LAST:event_btnLamMoiForm4ActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (tabs.getSelectedIndex() == 0) {
            if(checkNull()&&checkNumber()&&checkStatus()){
                  update();
            }
          
        } else {
             if(checkNull()&&checkNumber()){
                    update2();
            }
          
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
       if(checkNull()&&checkNumber()){
           insert();
       }
        
    }//GEN-LAST:event_btnThemActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
       ManHinhService.fillCombo(QuanLySanPham.manHinhModel, QuanLySanPham.cboManHinh, QuanLySanPham.listManHinh);
    }//GEN-LAST:event_formWindowClosed

    private void cboDPGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDPGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboDPGActionPerformed

    private void rdoDKDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDKDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoDKDActionPerformed

    private void btnThemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseEntered
         changeColor(btnThem, new Color(102, 0, 102));
    }//GEN-LAST:event_btnThemMouseEntered

    private void btnThemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseExited
         changeColor(btnThem, new Color(25, 29, 74));
    }//GEN-LAST:event_btnThemMouseExited

    private void btnSuaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseEntered
         changeColor(btnSua, new Color(102, 0, 102));
    }//GEN-LAST:event_btnSuaMouseEntered

    private void btnSuaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseExited
        changeColor(btnSua, new Color(25, 29, 74));
    }//GEN-LAST:event_btnSuaMouseExited

    private void btnLamMoiForm4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiForm4MouseEntered
            changeColor(btnLamMoiForm4, new Color(102, 0, 102));
    }//GEN-LAST:event_btnLamMoiForm4MouseEntered

    private void btnLamMoiForm4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiForm4MouseExited
               changeColor(btnLamMoiForm4, new Color(25, 29, 74));
    }//GEN-LAST:event_btnLamMoiForm4MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLManHinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLManHinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLManHinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLManHinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLManHinh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoiForm4;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboDPG;
    private javax.swing.JScrollPane d;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoDKD;
    private javax.swing.JRadioButton rdoNKD;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblDKD;
    private javax.swing.JTable tblNKD;
    private javax.swing.JTextField txtKichThuoc;
    private javax.swing.JTextField txtLoaiMH;
    // End of variables declaration//GEN-END:variables

    @Override
    public void init() {
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.fillTableDKD();
        this.fillTableNKD();
        updateStatus();
        row = -1;
    }

    @Override
    public BusManHinhModel getForm() {
        BusManHinhModel busMhModel = new BusManHinhModel();
        busMhModel.setLoaiManHinh(txtLoaiMH.getText());
        busMhModel.setKichThuoc(Float.parseFloat(txtKichThuoc.getText()));
        busMhModel.setDoPhanGiaiManHinh(cboDPG.getSelectedItem() + "");
        busMhModel.setTrangThai(rdoDKD.isSelected());
        return busMhModel;
    }

    @Override
    public void setForm(BusManHinhModel model) {
        txtLoaiMH.setText(model.getLoaiManHinh());
        txtKichThuoc.setText(model.getKichThuoc() + "");
        cboDPG.setSelectedItem(model.getDoPhanGiaiManHinh());
        rdoDKD.setSelected(model.isTrangThai());
        rdoNKD.setSelected(!model.isTrangThai());

    }

    @Override
    public void updateStatus() {
        boolean edit = (this.row >= 0);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnLamMoiForm4.setEnabled(edit);
    }

    public void updateStatus2() {
        boolean edit = (this.row >= 0);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnLamMoiForm4.setEnabled(edit);
    }

    @Override
    public void insert() {
        BusManHinhModel busmhModel = this.getForm();
        try {
            mhser.insert(busmhModel);
            this.fillTableDKD();
            this.clearForm();
            this.updateStatus();
            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();
        }
    }

    @Override
    public void update() {

        BusManHinhModel busmhModel = this.getForm();
        int idmh = (int) tblDKD.getValueAt(this.row, 0);
        busmhModel.setMaManHinh(idmh);
        try {
            mhser.update(busmhModel);
            this.fillTableDKD();
            this.fillTableNKD();
            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();

        }
    }

    public void update2() {
        BusManHinhModel busmhModel = this.getForm();
        int idmh = (int) tblNKD.getValueAt(this.row, 0);
        busmhModel.setMaManHinh(idmh);
        try {
            mhser.update(busmhModel);
            this.fillTableNKD();
            this.fillTableDKD();
            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();
        }
    }

    @Override
    public void delete() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void edit() {
        if (tabs.getSelectedIndex() == 0) {
            int idmh = (int) tblDKD.getValueAt(this.row, 0);
            BusManHinhModel pinmodel = this.mhser.selectByID(idmh);
            setForm(pinmodel);
            updateStatus();
        } else {
            int idmh = (int) tblNKD.getValueAt(this.row, 0);
            BusManHinhModel pinmodel = this.mhser.selectByID(idmh);
            setForm(pinmodel);
            updateStatus2();

        }
    }

    @Override
    public void clearForm() {
        BusManHinhModel mhmodel = new BusManHinhModel();
        this.row = -1;
        this.setForm(mhmodel);
        this.updateStatus();
        cboDPG.setSelectedIndex(0);
    }

    @Override
    public void fillTable() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void first() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void last() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void next() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void previous() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean validateForm(boolean isEdit) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void fillTableDKD() {
        DefaultTableModel modeldkd = (DefaultTableModel) tblDKD.getModel();
        modeldkd.setRowCount(0);
        try {
            List<BusManHinhModel> listmh = mhser.selectAllKD();
            for (BusManHinhModel mh : listmh) {
                Object[] row = {mh.getMaManHinh(), mh.getLoaiManHinh(), mh.getKichThuoc(), mh.getDoPhanGiaiManHinh(), mh.isTrangThai() ? "Đang kinh doanh" : "Ngừng kinh doanh"};
                modeldkd.addRow(row);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillTableNKD() {
        DefaultTableModel modeldkd = (DefaultTableModel) tblNKD.getModel();
        modeldkd.setRowCount(0);
        try {
            List<BusManHinhModel> listmh = mhser.selectAllNKD();
            for (BusManHinhModel mh : listmh) {
                Object[] row = {mh.getMaManHinh(), mh.getLoaiManHinh(), mh.getKichThuoc(), mh.getDoPhanGiaiManHinh(), mh.isTrangThai() ? "Đang kinh doanh" : "Ngừng kinh doanh"};
                modeldkd.addRow(row);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
     public boolean checkStatus(){
    try {
        int chkmamh = (int) tblDKD.getValueAt(row, 0);
        con = JDBCHelper.ketnoi();
        PreparedStatement pstm = con.prepareStatement(sql);
        ResultSet rs = pstm.executeQuery();
        while (rs.next()) {
            if(chkmamh==rs.getInt("MaManHinh")){
                MessageService.alert(this, "Màn hình này vẫn đang được sử dụng trong sản phẩm!");
                return false;
            }
            
        }
        
    } catch (SQLException ex) {
        MessageService.alert(this, "Lỗi check update");
    }
    return true;    
    }
    public boolean checkNull(){
        if(txtKichThuoc.getText().isEmpty()){
            MessageService.alert(this, "Không bỏ trống kích thước!");
            return false;
        }
        if(txtLoaiMH.getText().isEmpty()){
             MessageService.alert(this, "Không bỏ trống loại màn hình!");
            return false;
        }
        return true;
    }
     public boolean checkNumber(){
        try {
            float so = Float.parseFloat(txtKichThuoc.getText());
        } catch (Exception e) {
             MessageService.alert(this, "Kích thước phải là số!");
            return false;
        }
        return true;
    }
}
