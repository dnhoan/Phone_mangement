/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.Models.BusCTSanPhamModel;
import BUS.Models.BusHeDieuHanhModel;
import BUS.Models.BusSanPham;
import BUS.Services.CpuService;
import BUS.Services.HeDieuHanhService;
import DAL.Services.JDBCHelper;
import GUI.Services.IEditService;
import GUI.Services.MessageService;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QLHeDieuHanh extends javax.swing.JFrame implements IEditService<BusHeDieuHanhModel> {
   BusCTSanPhamModel ctsp = new BusCTSanPhamModel();
    BusHeDieuHanhModel hdh = new BusHeDieuHanhModel();
    HeDieuHanhService hdhser = new HeDieuHanhService();
    int row = -1;
    
 

    /**
     * Creates new form QLHeDieuHanh
     */
    public QLHeDieuHanh() {
        initComponents();
         getContentPane().setBackground(Color.WHITE);
         desginTable();
        init();
    }
     public void changeColor(JButton hover, Color rand) {
        hover.setBackground(rand);
    }
public void desginTable() {
        tblDSD.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 15));
        tblDSD.getTableHeader().setOpaque(false);
        tblDSD.getTableHeader().setBackground(new Color(25, 29, 74));
       tblDSD.getTableHeader().setForeground(Color.WHITE);
        
        tblDSD.getTableHeader().setDraggedColumn(null);
        tblNSD.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 15));
       tblNSD.getTableHeader().setOpaque(false);
         tblNSD.getTableHeader().setBackground(new Color(25, 29, 74));
         tblNSD.getTableHeader().setForeground(Color.WHITE);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtTenHDH = new javax.swing.JTextField();
        rdoDSD = new javax.swing.JRadioButton();
        rdoNSD = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLamMoiForm4 = new javax.swing.JButton();
        tabs = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSD = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNSD = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Hệ điều hành");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(5, 10, 46));
        jLabel1.setText("Tên hệ điều hành");

        txtTenHDH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtTenHDH.setForeground(new java.awt.Color(25, 29, 74));
        txtTenHDH.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(5, 10, 46)));

        rdoDSD.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdoDSD);
        rdoDSD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoDSD.setForeground(new java.awt.Color(25, 29, 74));
        rdoDSD.setSelected(true);
        rdoDSD.setText("Đang sử dụng");

        rdoNSD.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rdoNSD);
        rdoNSD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdoNSD.setForeground(new java.awt.Color(25, 29, 74));
        rdoNSD.setText("Ngừng sử dụng");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(5, 10, 46));
        jLabel3.setText("Trạng thái");

        jPanel53.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        btnThem.setBackground(new java.awt.Color(25, 29, 74));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add1.png"))); // NOI18N
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 29, 74), 30));
        btnThem.setBorderPainted(false);
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnThemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnThemMouseExited(evt);
            }
        });
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel53.add(btnThem);

        btnSua.setBackground(new java.awt.Color(25, 29, 74));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/update.png"))); // NOI18N
        btnSua.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 29, 74), 30));
        btnSua.setBorderPainted(false);
        btnSua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSuaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSuaMouseExited(evt);
            }
        });
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel53.add(btnSua);

        btnLamMoiForm4.setBackground(new java.awt.Color(25, 29, 74));
        btnLamMoiForm4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/neww.png"))); // NOI18N
        btnLamMoiForm4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 29, 74), 30));
        btnLamMoiForm4.setBorderPainted(false);
        btnLamMoiForm4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLamMoiForm4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLamMoiForm4MouseExited(evt);
            }
        });
        btnLamMoiForm4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiForm4ActionPerformed(evt);
            }
        });
        jPanel53.add(btnLamMoiForm4);

        tabs.setBackground(new java.awt.Color(255, 255, 255));
        tabs.setForeground(new java.awt.Color(102, 0, 102));
        tabs.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabsMouseClicked(evt);
            }
        });

        tblDSD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblDSD.setForeground(new java.awt.Color(25, 29, 74));
        tblDSD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã HDH", "Tên HDH", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDSD.setGridColor(new java.awt.Color(25, 29, 74));
        tblDSD.setRowHeight(25);
        tblDSD.setRowMargin(0);
        tblDSD.getTableHeader().setReorderingAllowed(false);
        tblDSD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSD);
        if (tblDSD.getColumnModel().getColumnCount() > 0) {
            tblDSD.getColumnModel().getColumn(0).setMinWidth(0);
            tblDSD.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        tabs.addTab("Đang sử dụng", jScrollPane1);

        tblNSD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblNSD.setForeground(new java.awt.Color(25, 29, 74));
        tblNSD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã HDH", "Tên HDH", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNSD.setGridColor(new java.awt.Color(25, 29, 74));
        tblNSD.setRowHeight(25);
        tblNSD.setRowMargin(0);
        tblNSD.getTableHeader().setReorderingAllowed(false);
        tblNSD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNSDMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNSD);
        if (tblNSD.getColumnModel().getColumnCount() > 0) {
            tblNSD.getColumnModel().getColumn(0).setMinWidth(0);
            tblNSD.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        tabs.addTab("Ngừng sử dụng", jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdoDSD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoNSD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(txtTenHDH, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenHDH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoDSD)
                            .addComponent(rdoNSD))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel53, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDSDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSDMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblDSD.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblDSDMouseClicked

    private void tblNSDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNSDMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblNSD.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblNSDMouseClicked

    private void tabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabsMouseClicked
        if (tabs.getSelectedIndex() == 0) {
            clearForm();
            updateStatus();

        } else {
            clearForm();
            updateStatus2();
        }
    }//GEN-LAST:event_tabsMouseClicked

    private void btnLamMoiForm4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiForm4ActionPerformed
        clearForm();
    }//GEN-LAST:event_btnLamMoiForm4ActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (tabs.getSelectedIndex() == 0) {
            if(checkNull()&&checkUpdate()){
                     update();
            }
       
        } else {
            update2();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (checkNull()) {
             insert();
        }
       
    }//GEN-LAST:event_btnThemActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        HeDieuHanhService.fillCombo(QuanLySanPham.heDieuHanhModel, QuanLySanPham.cboHeDieuHanh, QuanLySanPham.listHeDieuHanh);
    }//GEN-LAST:event_formWindowClosed

    private void btnThemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseEntered
      changeColor(btnThem, new Color(102, 0, 102));
    }//GEN-LAST:event_btnThemMouseEntered

    private void btnThemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseExited
        changeColor(btnThem, new Color(25, 29, 74));
    }//GEN-LAST:event_btnThemMouseExited

    private void btnSuaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseEntered
              changeColor(btnSua, new Color(102, 0, 102));
    }//GEN-LAST:event_btnSuaMouseEntered

    private void btnSuaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaMouseExited
         changeColor(btnSua, new Color(25, 29, 74));
    }//GEN-LAST:event_btnSuaMouseExited

    private void btnLamMoiForm4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiForm4MouseEntered
       changeColor(btnLamMoiForm4, new Color(102, 0, 102));
    }//GEN-LAST:event_btnLamMoiForm4MouseEntered

    private void btnLamMoiForm4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiForm4MouseExited
       changeColor(btnLamMoiForm4, new Color(25, 29, 74));
    }//GEN-LAST:event_btnLamMoiForm4MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLHeDieuHanh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLHeDieuHanh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLHeDieuHanh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLHeDieuHanh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLHeDieuHanh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoiForm4;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdoDSD;
    private javax.swing.JRadioButton rdoNSD;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblDSD;
    private javax.swing.JTable tblNSD;
    private javax.swing.JTextField txtTenHDH;
    // End of variables declaration//GEN-END:variables

    @Override
    public void init() {
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        fillTableDSD();
        fillTableNSD();
        updateStatus();
        row = -1;
    }

    @Override
    public BusHeDieuHanhModel getForm() {
        BusHeDieuHanhModel modelhdh = new BusHeDieuHanhModel();
        modelhdh.setTenHeDieuHanh(txtTenHDH.getText());
        modelhdh.setTrangThai(rdoDSD.isSelected());
        return modelhdh;
    }

    @Override
    public void setForm(BusHeDieuHanhModel entity) {
        txtTenHDH.setText(entity.getTenHeDieuHanh());
        rdoDSD.setSelected(entity.isTrangThai());
        rdoNSD.setSelected(!entity.isTrangThai());
    }

    @Override
    public void updateStatus() {
        boolean edit = (this.row >= 0);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnLamMoiForm4.setEnabled(true);
    }

    public void updateStatus2() {
        boolean edit = (this.row >= 0);
        btnThem.setEnabled(false);
        btnSua.setEnabled(edit);
        btnLamMoiForm4.setEnabled(false);
    }

    @Override
    public void insert() {
        BusHeDieuHanhModel hdhmodel = this.getForm();
        try {
            hdhser.insert(hdhmodel);
            this.fillTableDSD();
            this.clearForm();
            this.updateStatus();
            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();
        }
    }

    @Override
    public void update() {

        BusHeDieuHanhModel hdhmodel = this.getForm();
        int idhdh = (int) tblDSD.getValueAt(this.row, 0);
        hdhmodel.setMaHeDieuHanh(idhdh);
        try {
            hdhser.update(hdhmodel);
            this.fillTableDSD();
            this.fillTableNSD();
            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();

        }
    }

    public void update2() {
        BusHeDieuHanhModel hdhmodel = this.getForm();
       int idhdh = (int) tblNSD.getValueAt(this.row, 0);
        hdhmodel.setMaHeDieuHanh(idhdh);
        try {
            hdhser.update(hdhmodel);
            this.fillTableNSD();
            this.fillTableDSD();

            MessageService.alert(this, "ok");
        } catch (Exception e) {
            MessageService.alert(this, "err");
            e.printStackTrace();

        }
    }

    @Override
    public void delete() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void edit() {
        if (tabs.getSelectedIndex() == 0) {

            int idhdh = (int) tblDSD.getValueAt(this.row, 0);

            BusHeDieuHanhModel hdhmodel = this.hdhser.selectByID(idhdh);
            setForm(hdhmodel);
            updateStatus();
        } else {
            int idhdh = (int) tblNSD.getValueAt(this.row, 0);

            BusHeDieuHanhModel hdhmodel = this.hdhser.selectByID(idhdh);
            setForm(hdhmodel);
            updateStatus2();

        }
    }

    @Override
    public void clearForm() {
        BusHeDieuHanhModel hdhmodel = new BusHeDieuHanhModel();
        this.row = -1;
        this.setForm(hdhmodel);
        this.updateStatus();

    }

    @Override
    public void fillTable() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void first() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void last() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void next() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void previous() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean validateForm(boolean isEdit) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void fillTableDSD() {
        DefaultTableModel modeldsd = (DefaultTableModel) tblDSD.getModel();
        modeldsd.setRowCount(0);
        try {
            List<BusHeDieuHanhModel> listhdh = hdhser.selectAllDSD();
            for (BusHeDieuHanhModel hdh : listhdh) {
                Object[] row = {hdh.getMaHeDieuHanh(), hdh.getTenHeDieuHanh(), hdh.isTrangThai() ? "Đang sử dụng" : "Ngừng sử dụng"};
                modeldsd.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillTableNSD() {
        DefaultTableModel modelnsd = (DefaultTableModel) tblNSD.getModel();
        modelnsd.setRowCount(0);
        try {
            List<BusHeDieuHanhModel> listhdh = hdhser.selectAllNSD();
            for (BusHeDieuHanhModel hdh : listhdh) {
                Object[] row = {hdh.getMaHeDieuHanh(), hdh.getTenHeDieuHanh(), hdh.isTrangThai() ? "Đang sử dụng" : "Ngừng sử dụng"};
                modelnsd.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
       public boolean checkUpdate(){
        try {
        int chkmahdh = (int) tblDSD.getValueAt(row, 0);
         Connection con = JDBCHelper.ketnoi();
        PreparedStatement pstm = con.prepareStatement("SELECT MaHeDieuHanh from CTSANPHAM where TrangThai = 1");
        ResultSet rs = pstm.executeQuery();
        while (rs.next()) {
            if(chkmahdh==rs.getInt("MaHeDieuHanh")){
                MessageService.alert(this, "Hệ điều hành này vẫn đang được sử dụng trong sản phẩm!");
                return false;
            }
            
        }
        
    } catch (SQLException ex) {
        MessageService.alert(this, "Lỗi check update");
    }
        return true;
    }
    public boolean checkNull(){
        if(txtTenHDH.getText().isEmpty()){
            MessageService.alert(this, "Không bỏ trống tên hệ điều hành!");
            return false;
        }
       
        return true;
    }
}
