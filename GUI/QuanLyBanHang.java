// cập nhập tồn kho sau khi xóa back up
// sửa hóa đơn trả hàng
// in hóa đơn
// xuất file excel

package GUI;

import BUS.Models.BusCTSanPhamModel;
import BUS.Models.BusHoaDon;
import BUS.Models.BusPhanLoaiSpModel;
import BUS.Models.KhachHangModel;
import BUS.Services.BusImeiService;
import BUS.Services.BusPhanLoaiSpService;
import BUS.Services.CTHoaDonService;
import BUS.Services.HoaDonService;
import BUS.Services.KhachHangService;
import BUS.Services.SanPhamService;
import DAL.Models.DalChiTietHoaDon;
import DAL.Models.DalHoaDon;
import DAL.Models.DalImeiModel;
import static GUI.Main.jDesktopPane1;
import GUI.Models.CartModel;
import GUI.Services.AuthService;
import GUI.Services.ButtonColumn;
import GUI.Services.DateService;
import GUI.Services.MessageService;
import GUI.Services.UtilityService;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author ADMIN
 */
public class QuanLyBanHang extends javax.swing.JInternalFrame {

    /**
     * Creates new form QuanLyBanHang
     */
    Comparator<BusCTSanPhamModel> comparator = Comparator.comparing(BusCTSanPhamModel::getGiaBan);
    static List<BusCTSanPhamModel> listSp = new ArrayList<>();
    List<BusHoaDon> listHoaDon = new ArrayList<>();
    SanPhamService sanPhamService = new SanPhamService();
    public static List<CartModel> listCart = new ArrayList<>();
    List<KhachHangModel> listKhachHang = new ArrayList<>();
    static DefaultTableModel cartModel;
    static DefaultTableModel modelSp;
    DefaultTableModel sanPhamModel;
    DefaultTableModel hoaDonModel;
    DefaultTableModel hoaDonRecycleModel;
    DefaultComboBoxModel<KhachHangModel> khachHangModel;
    KhachHangService khachHangService = new KhachHangService();
    HoaDonService hoaDonService = new HoaDonService();
    CTHoaDonService cTHoaDonService = new CTHoaDonService();
    int row = -1;
    int rowHoaDon;
    static float totalMoney = 0;
    float hoaDonTong;
    int currentId;
    Icon iconThem = new ImageIcon(getClass().getResource("/icon/Add.png"));

    public QuanLyBanHang() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        Toolkit t = Toolkit.getDefaultToolkit();
        Dimension d = t.getScreenSize();
        int h = d.height;
        int w = d.width;
        this.setSize(w, h);
        this.init();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnInHocDon = new javax.swing.JButton();
        btnChotDon = new javax.swing.JButton();
        lblTongTien = new javax.swing.JLabel();
        cboKhachHang = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtKhachThanhToan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        editKhachHang = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        btnNewReceip = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtDiahChiKh = new javax.swing.JTextArea();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        jpnHoaDOn = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jpnSanPham = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        btnExportexcel = new javax.swing.JButton();
        btnAscen = new javax.swing.JButton();
        txtSearchBox = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnNewReceip2 = new javax.swing.JButton();
        txtNhanVien = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jpnHoaDonInDate = new javax.swing.JPanel();
        cboPhanLoai = new javax.swing.JComboBox<>();
        lblPhanLoai = new javax.swing.JLabel();
        jpnHoaDonTreo = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        rdoKhongGiao = new javax.swing.JRadioButton();
        rdoShipHang = new javax.swing.JRadioButton();
        txtTienShip = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtNgayGiaoHang = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        lblNoteThanhToan = new javax.swing.JLabel();
        btnSwichDanhsach = new javax.swing.JButton();
        btnDesc = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnInHocDon.setText("Lưu và in");
        btnInHocDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHocDonActionPerformed(evt);
            }
        });
        getContentPane().add(btnInHocDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 680, 89, 40));

        btnChotDon.setText("Thanh toán");
        btnChotDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChotDonActionPerformed(evt);
            }
        });
        getContentPane().add(btnChotDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 680, -1, 40));

        lblTongTien.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(204, 0, 0));
        lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTongTien.setText("Tổng tiền: 0 VNĐ");
        getContentPane().add(lblTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 620, 400, -1));

        cboKhachHang.setBackground(new java.awt.Color(153, 153, 153));
        cboKhachHang.setEditable(true);
        cboKhachHang.setForeground(new java.awt.Color(153, 153, 153));
        getContentPane().add(cboKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 100, 240, 35));

        jLabel4.setText("Khách hàng");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 110, -1, 20));

        jLabel5.setText("Nhân viên");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 170, -1, -1));

        txtKhachThanhToan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtKhachThanhToanFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKhachThanhToanFocusLost(evt);
            }
        });
        txtKhachThanhToan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKhachThanhToanKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKhachThanhToanKeyTyped(evt);
            }
        });
        getContentPane().add(txtKhachThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 520, 290, 35));

        jLabel6.setText("Địa chỉ nhận hàng");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 320, -1, -1));

        editKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/editing.png"))); // NOI18N
        editKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editKhachHangActionPerformed(evt);
            }
        });
        getContentPane().add(editKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 110, 45, 35));

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane4.setViewportView(txtGhiChu);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 210, 290, 90));

        btnNewReceip.setText("Sửa");
        btnNewReceip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewReceipActionPerformed(evt);
            }
        });
        getContentPane().add(btnNewReceip, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 680, 80, 40));

        txtDiahChiKh.setEditable(false);
        txtDiahChiKh.setColumns(20);
        txtDiahChiKh.setRows(5);
        txtDiahChiKh.setText("Tại cửa hàng\n");
        jScrollPane6.setViewportView(txtDiahChiKh);

        getContentPane().add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 350, 290, 60));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Đơn hàng"));

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaCTSP", "Ảnh", "Tên sản phẩm", "Giá", "SL", "Tổng tiền", "Imei"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCartMouseClicked(evt);
            }
        });
        tblCart.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                tblCartComponentResized(evt);
            }
        });
        tblCart.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tblCartInputMethodTextChanged(evt);
            }
        });
        tblCart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblCartKeyTyped(evt);
            }
        });
        jScrollPane8.setViewportView(tblCart);
        if (tblCart.getColumnModel().getColumnCount() > 0) {
            tblCart.getColumnModel().getColumn(0).setMinWidth(0);
            tblCart.getColumnModel().getColumn(0).setMaxWidth(0);
            tblCart.getColumnModel().getColumn(1).setMinWidth(60);
            tblCart.getColumnModel().getColumn(1).setMaxWidth(60);
            tblCart.getColumnModel().getColumn(3).setMinWidth(150);
            tblCart.getColumnModel().getColumn(3).setMaxWidth(150);
            tblCart.getColumnModel().getColumn(4).setMinWidth(50);
            tblCart.getColumnModel().getColumn(4).setMaxWidth(50);
            tblCart.getColumnModel().getColumn(5).setMinWidth(150);
            tblCart.getColumnModel().getColumn(5).setMaxWidth(150);
            tblCart.getColumnModel().getColumn(6).setMinWidth(60);
            tblCart.getColumnModel().getColumn(6).setMaxWidth(60);
        }

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 778, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, -1, -1));

        jpnHoaDOn.setBackground(new java.awt.Color(255, 255, 255));
        jpnHoaDOn.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa đơn"));
        jpnHoaDOn.setForeground(new java.awt.Color(255, 255, 0));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mahd", "Manv", "Ten kh + st", "Ngay tao", "SL", "Phi ship", "Thanh tien", "Khach tra", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.setRowHeight(30);
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(tblHoaDon);
        if (tblHoaDon.getColumnModel().getColumnCount() > 0) {
            tblHoaDon.getColumnModel().getColumn(0).setMinWidth(0);
            tblHoaDon.getColumnModel().getColumn(0).setMaxWidth(0);
            tblHoaDon.getColumnModel().getColumn(1).setMinWidth(50);
            tblHoaDon.getColumnModel().getColumn(1).setMaxWidth(50);
            tblHoaDon.getColumnModel().getColumn(3).setMinWidth(100);
            tblHoaDon.getColumnModel().getColumn(3).setMaxWidth(100);
            tblHoaDon.getColumnModel().getColumn(4).setMinWidth(40);
            tblHoaDon.getColumnModel().getColumn(4).setMaxWidth(40);
            tblHoaDon.getColumnModel().getColumn(5).setMinWidth(100);
            tblHoaDon.getColumnModel().getColumn(5).setMaxWidth(100);
            tblHoaDon.getColumnModel().getColumn(6).setMinWidth(120);
            tblHoaDon.getColumnModel().getColumn(6).setMaxWidth(120);
            tblHoaDon.getColumnModel().getColumn(7).setMinWidth(120);
            tblHoaDon.getColumnModel().getColumn(7).setMaxWidth(120);
            tblHoaDon.getColumnModel().getColumn(8).setMinWidth(60);
            tblHoaDon.getColumnModel().getColumn(8).setMaxWidth(60);
        }

        javax.swing.GroupLayout jpnHoaDOnLayout = new javax.swing.GroupLayout(jpnHoaDOn);
        jpnHoaDOn.setLayout(jpnHoaDOnLayout);
        jpnHoaDOnLayout.setHorizontalGroup(
            jpnHoaDOnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
        );
        jpnHoaDOnLayout.setVerticalGroup(
            jpnHoaDOnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
        );

        getContentPane().add(jpnHoaDOn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 790, 378));

        jpnSanPham.setBackground(new java.awt.Color(255, 255, 255));
        jpnSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder("Sản phẩm"));
        jpnSanPham.setForeground(new java.awt.Color(255, 255, 0));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã CTSP", "Ảnh", "Tên SP", "Giá Bán", "Kho", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblSanPham);
        if (tblSanPham.getColumnModel().getColumnCount() > 0) {
            tblSanPham.getColumnModel().getColumn(0).setMinWidth(0);
            tblSanPham.getColumnModel().getColumn(0).setMaxWidth(0);
            tblSanPham.getColumnModel().getColumn(1).setMinWidth(60);
            tblSanPham.getColumnModel().getColumn(1).setMaxWidth(60);
            tblSanPham.getColumnModel().getColumn(3).setMinWidth(150);
            tblSanPham.getColumnModel().getColumn(3).setMaxWidth(150);
            tblSanPham.getColumnModel().getColumn(4).setMinWidth(60);
            tblSanPham.getColumnModel().getColumn(4).setMaxWidth(60);
            tblSanPham.getColumnModel().getColumn(5).setMinWidth(60);
            tblSanPham.getColumnModel().getColumn(5).setMaxWidth(60);
        }

        javax.swing.GroupLayout jpnSanPhamLayout = new javax.swing.GroupLayout(jpnSanPham);
        jpnSanPham.setLayout(jpnSanPhamLayout);
        jpnSanPhamLayout.setHorizontalGroup(
            jpnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
        );
        jpnSanPhamLayout.setVerticalGroup(
            jpnSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
        );

        getContentPane().add(jpnSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 790, 378));

        btnExportexcel.setBackground(new java.awt.Color(51, 102, 255));
        btnExportexcel.setText("Xuất file excel");
        btnExportexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportexcelActionPerformed(evt);
            }
        });
        getContentPane().add(btnExportexcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 140, 40));

        btnAscen.setBackground(new java.awt.Color(51, 102, 255));
        btnAscen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/sort.png"))); // NOI18N
        btnAscen.setText("Giá cao");
        btnAscen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAscenActionPerformed(evt);
            }
        });
        getContentPane().add(btnAscen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 30));

        txtSearchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchBoxKeyTyped(evt);
            }
        });
        getContentPane().add(txtSearchBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, 330, 30));

        lblTimKiem.setText("Tìm kiếm sản phẩm");
        getContentPane().add(lblTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, -1, 24));

        jLabel9.setText("Ghi chú");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 220, 80, -1));

        btnNewReceip2.setText("Hóa đơn mới");
        btnNewReceip2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewReceip2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnNewReceip2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 680, 100, 40));

        txtNhanVien.setEditable(false);
        txtNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNhanVienActionPerformed(evt);
            }
        });
        getContentPane().add(txtNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 160, 290, 35));

        jLabel11.setText("Khách trả trước");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 530, -1, -1));

        jpnHoaDonInDate.setBackground(new java.awt.Color(255, 255, 255));
        jpnHoaDonInDate.setLayout(new java.awt.GridLayout(0, 1));
        getContentPane().add(jpnHoaDonInDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 440, 120, 310));

        cboPhanLoai.setBackground(new java.awt.Color(153, 153, 153));
        cboPhanLoai.setForeground(new java.awt.Color(51, 51, 51));
        cboPhanLoai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboPhanLoaiItemStateChanged(evt);
            }
        });
        getContentPane().add(cboPhanLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 190, 30));

        lblPhanLoai.setText("Phân Loại sản phẩm");
        getContentPane().add(lblPhanLoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, 24));

        jpnHoaDonTreo.setBackground(new java.awt.Color(255, 255, 255));
        jpnHoaDonTreo.setLayout(new java.awt.GridLayout(0, 1));
        getContentPane().add(jpnHoaDonTreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 50, 120, 350));

        jLabel12.setText("Hóa đơn treo");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 30, -1, -1));

        jLabel13.setText("Hóa đơn trong ngày");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 420, -1, -1));

        buttonGroup1.add(rdoKhongGiao);
        rdoKhongGiao.setSelected(true);
        rdoKhongGiao.setText("Tại cửa hàng");
        rdoKhongGiao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rdoKhongGiaoItemStateChanged(evt);
            }
        });
        getContentPane().add(rdoKhongGiao, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 320, -1, -1));

        buttonGroup1.add(rdoShipHang);
        rdoShipHang.setText("Ship hàng");
        getContentPane().add(rdoShipHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 320, -1, -1));

        txtTienShip.setEditable(false);
        getContentPane().add(txtTienShip, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 430, 290, 30));

        jLabel14.setText("Ngày giao hàng");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 480, 100, -1));
        getContentPane().add(txtNgayGiaoHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 470, 290, 30));

        jLabel15.setText("Phí vận chuyển");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 440, 80, -1));

        lblNoteThanhToan.setForeground(new java.awt.Color(204, 0, 0));
        lblNoteThanhToan.setText("note txt khach");
        getContentPane().add(lblNoteThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 560, 210, 30));

        btnSwichDanhsach.setText("Danh sách hóa đơn");
        btnSwichDanhsach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwichDanhsachActionPerformed(evt);
            }
        });
        getContentPane().add(btnSwichDanhsach, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 40, 160, 40));

        btnDesc.setBackground(new java.awt.Color(51, 102, 255));
        btnDesc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/tang.png"))); // NOI18N
        btnDesc.setText("Giá thấp");
        btnDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescActionPerformed(evt);
            }
        });
        getContentPane().add(btnDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInHocDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHocDonActionPerformed
        this.insert(true);
        fillButtonHoaDonToPannel();
    }//GEN-LAST:event_btnInHocDonActionPerformed

    private void btnChotDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChotDonActionPerformed
        if (txtKhachThanhToan.getText().matches(regex_float)) {
            float khachThanhToan = Float.parseFloat(txtKhachThanhToan.getText());
            if (khachThanhToan == totalMoney) {
                this.insert(false);
                fillButtonHoaDonToPannel();
            } else {
                MessageService.alert(this, "Nhập đủ số tiền");
            }
        } else {
            MessageService.alert(this, "Nhập khách thanh toán bằng số");
        }
    }//GEN-LAST:event_btnChotDonActionPerformed

    private void txtKhachThanhToanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKhachThanhToanFocusGained
        lblNoteThanhToan.setText("Để trống nếu muốn thanh toán");
    }//GEN-LAST:event_txtKhachThanhToanFocusGained

    private void txtKhachThanhToanFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKhachThanhToanFocusLost
        lblNoteThanhToan.setText("");
    }//GEN-LAST:event_txtKhachThanhToanFocusLost

    private void txtKhachThanhToanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKhachThanhToanKeyPressed

    }//GEN-LAST:event_txtKhachThanhToanKeyPressed

    private void txtKhachThanhToanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKhachThanhToanKeyTyped
        System.out.println(txtKhachThanhToan.getText());
        if (!txtKhachThanhToan.getText().isEmpty()) {
            btnChotDon.setEnabled(false);
        } else {
            btnChotDon.setEnabled(true);
        }
    }//GEN-LAST:event_txtKhachThanhToanKeyTyped

    private void editKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editKhachHangActionPerformed
        removeAllImei();
        QuanLyKhachHang kh = new QuanLyKhachHang();
        jDesktopPane1.removeAll();
        jDesktopPane1.add(kh).setVisible(true);
    }//GEN-LAST:event_editKhachHangActionPerformed

    private void btnNewReceipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewReceipActionPerformed
        this.clearHoaDon();
    }//GEN-LAST:event_btnNewReceipActionPerformed

    private void tblCartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCartMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCartMouseClicked

    private void tblCartComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tblCartComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCartComponentResized

    private void tblCartInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblCartInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCartInputMethodTextChanged

    private void tblCartKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCartKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCartKeyTyped

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        if (evt.getClickCount() == 2) {
            new XemChiTietSanPham((int) tblSanPham.getValueAt(tblSanPham.getSelectedRow(), 0)).setVisible(true);
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnExportexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportexcelActionPerformed
        this.sortDesc();
    }//GEN-LAST:event_btnExportexcelActionPerformed

    private void btnAscenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAscenActionPerformed
        this.sortAsend();
    }//GEN-LAST:event_btnAscenActionPerformed

    private void txtSearchBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBoxKeyTyped
        if (isDsHoaDon) {
            cboSelected = cboPhanLoai.getSelectedIndex();
            this.getDataHoaDon(cboSelected);
            this.fillTableHoaDon(hoaDonModel, tblHoaDon, listHoaDon);
        } else {
            this.getProductData();
            fillTable(listSp);
        }
    }//GEN-LAST:event_txtSearchBoxKeyTyped

    private void btnNewReceip2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewReceip2ActionPerformed
        removeAllImei();
        this.clearHoaDon();
    }//GEN-LAST:event_btnNewReceip2ActionPerformed

    private void txtNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNhanVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNhanVienActionPerformed

    private void cboPhanLoaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboPhanLoaiItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (!isFirst && !isDsHoaDon) {
                BusPhanLoaiSpModel busPhanLoaiSpModel = (BusPhanLoaiSpModel) cboPhanLoai.getSelectedItem();
                getProductData();
                listSp = listSp.stream().filter(sp
                        -> sp.getBusPhanLoaiSpModel().getDalPhanLoaiSpModel().getMaPhanLoai()
                        == busPhanLoaiSpModel.getDalPhanLoaiSpModel().getMaPhanLoai()).toList();
                fillTable(listSp);
            } else {
                cboSelected = cboPhanLoai.getSelectedIndex();
                getDataHoaDon(cboSelected);
                fillTableHoaDon(hoaDonModel, tblHoaDon, listHoaDon);
            }
        }
    }//GEN-LAST:event_cboPhanLoaiItemStateChanged

    private void rdoKhongGiaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rdoKhongGiaoItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            txtDiahChiKh.setEditable(false);
            txtDiahChiKh.setText("Tại cửa hàng");
            txtTienShip.setEditable(false);
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            System.out.println("ship hang");
            txtDiahChiKh.setEditable(true);
            txtDiahChiKh.setText("");
            txtTienShip.setEditable(true);
        }
    }//GEN-LAST:event_rdoKhongGiaoItemStateChanged

    private void btnSwichDanhsachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwichDanhsachActionPerformed
        this.isDsHoaDon = !this.isDsHoaDon;
        if (this.isDsHoaDon) {
            showDanhSachHoaDon();
        } else {
            showDanhSachSanPhamm();
        }
    }//GEN-LAST:event_btnSwichDanhsachActionPerformed

    private void btnDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDescActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        int rowHoaDon = tblHoaDon.getSelectedRow();
        currentHoaDonSelected = (int) tblHoaDon.getValueAt(rowHoaDon, 0);
        setFormHoaDon(currentHoaDonSelected);
        isUpdatingHoaDon = true;
    }//GEN-LAST:event_tblHoaDonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAscen;
    private javax.swing.JButton btnChotDon;
    private javax.swing.JButton btnDesc;
    private javax.swing.JButton btnExportexcel;
    private javax.swing.JButton btnInHocDon;
    private javax.swing.JButton btnNewReceip;
    private javax.swing.JButton btnNewReceip2;
    private javax.swing.JButton btnSwichDanhsach;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboKhachHang;
    public static javax.swing.JComboBox<String> cboPhanLoai;
    private javax.swing.JButton editKhachHang;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel jpnHoaDOn;
    private javax.swing.JPanel jpnHoaDonInDate;
    private javax.swing.JPanel jpnHoaDonTreo;
    private javax.swing.JPanel jpnSanPham;
    private javax.swing.JLabel lblNoteThanhToan;
    private javax.swing.JLabel lblPhanLoai;
    private javax.swing.JLabel lblTimKiem;
    public static javax.swing.JLabel lblTongTien;
    private javax.swing.JRadioButton rdoKhongGiao;
    private javax.swing.JRadioButton rdoShipHang;
    public static javax.swing.JTable tblCart;
    public static javax.swing.JTable tblHoaDon;
    public static javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txtDiahChiKh;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtKhachThanhToan;
    private com.toedter.calendar.JDateChooser txtNgayGiaoHang;
    private javax.swing.JTextField txtNhanVien;
    private javax.swing.JTextField txtSearchBox;
    private javax.swing.JTextField txtTienShip;
    // End of variables declaration//GEN-END:variables
    DAL.Models.NhanVienModel currentUser = AuthService.user;
    DefaultComboBoxModel<BusPhanLoaiSpModel> phanLoaiModel;
    String regex_float = "[+-]?([0-9]*[.])?[0-9]+";
    boolean isFirst;

    void init() {
        addTableHeader();
        isFirst = true;
        BusPhanLoaiSpService.fillCombo(phanLoaiModel, cboPhanLoai);
        isFirst = false;
        txtNhanVien.setText(currentUser.getMaNV() + " - " + currentUser.getHoTen());
        this.fillToComboKhachHang();
        getProductData();
        fillTable(listSp);
        fillButtonHoaDonToPannel();
        buttonAdd();
        buttonRemove();
        buttonRemoveHoaDon();
        AutoCompleteDecorator.decorate(cboKhachHang);
        lblNoteThanhToan.setText("");
        btnExportexcel.hide();
        jpnHoaDOn.hide();
    }
    boolean isDsHoaDon = false;
    int cboSelected;
    void showDanhSachHoaDon() {
        lblTimKiem.setText("Tìm kiếm hóa đơn");
        lblPhanLoai.setText("Tình trạng hóa đơn");
        btnSwichDanhsach.setText("Danh sach san pham");
        tblSanPham.hide();
        btnAscen.hide();
        btnDesc.hide();
        btnExportexcel.show();
        jpnSanPham.hide();
        jpnHoaDOn.show();
        this.getDataHoaDon(0);
        cboPhanLoai.removeAllItems();
        cboPhanLoai.addItem("Tất cả");
        cboPhanLoai.addItem("Đã thanh toán");
        cboPhanLoai.addItem("Chưa thanh toán");
        cboPhanLoai.addItem("Đã xóa");
        cboPhanLoai.setSelectedItem("Tất cả");
        fillTableHoaDon(hoaDonModel, tblHoaDon, listHoaDon);
    }

    void showDanhSachSanPhamm() {
        lblTimKiem.setText("Tìm kiếm sản phẩm");
        lblPhanLoai.setText("Phân loại hàng");
        btnSwichDanhsach.setText("Danh sach hoa don");
        tblSanPham.show();
        btnAscen.show();
        btnDesc.show();
        btnExportexcel.hide();
        jpnHoaDOn.hide();
        jpnSanPham.show();
        getProductData();
        BusPhanLoaiSpService.fillCombo(phanLoaiModel, cboPhanLoai);
        fillTable(listSp);
    }

    void getProductData() {
        String keyWord = txtSearchBox.getText();
        try {
            QuanLyBanHang.listSp = sanPhamService.selectBySearch(1, keyWord);

        } catch (Exception e) {
            MessageService.alert(this, "loi");
        }
    }

    void getDataHoaDon(int filter) {
        try {
            String keyWord = txtSearchBox.getText();
            listHoaDon = hoaDonService.selectAll1(keyWord, filter);
        } catch (Exception e) {
        }
    }

    public void fillTableHoaDon(DefaultTableModel model, JTable tbl, List<BusHoaDon> list) {
        model = (DefaultTableModel) tbl.getModel();
        model.setRowCount(0);
        try {
            if (list != null) {
                for (BusHoaDon hd : list) {
                    model.addRow(new Object[]{
                        hd.getMahd(),
                        hd.getNhanVienModel().getMaNV(),
                        hd.getKhachHangModel().getTenKH() + " - " + hd.getKhachHangModel().getSDT(),
                        hd.getNgayTao(),
                        hd.getSoLuong(),
                        hd.getPhiVanChuyen(),
                        UtilityService.toVnd(hd.getTongTien()),
                        UtilityService.toVnd(hd.getTienKhachTra()),
                        cboSelected == 3 ? "Khoi phuc" : "Xoa"
                    });
                }
            }
        } catch (Exception e) {
        }
    }

    static void fillTable(List<BusCTSanPhamModel> listSp) {
        modelSp = (DefaultTableModel) tblSanPham.getModel();
        modelSp.setRowCount(0);
        listSp.forEach(sp -> {
            JLabel imageLabel = new JLabel();
            File path = new File("logos", sp.getHinh());
            ImageIcon imageicon = new ImageIcon(path.getAbsolutePath());
            Image img = imageicon.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH);
            imageLabel.setIcon(new ImageIcon(img));
            modelSp.addRow(new Object[]{
                sp.getMaCTSP(),
                imageLabel,
                sp.getSanPhamModel().getTensp() + " - " + sp.getBusMauSacModel().getDalMauSacModel().getTenMau()
                + " - " + sp.getBusPhanLoaiSpModel().getDalPhanLoaiSpModel().getTenLoai(),
                UtilityService.toVnd(sp.getGiaBan()),
                sp.getTonKho(),
                "Thêm"
            });
        });
    }

    void addToCart() {
        int rowSelected = tblSanPham.getSelectedRow();
        BusCTSanPhamModel busCTSanPhamModel = QuanLyBanHang.listSp.get(rowSelected);
        if (busCTSanPhamModel.getTonKho() > 0) {
            new SelectImei(busCTSanPhamModel).setVisible(true);
        } else {
            MessageService.alert(this, "Sản phẩm này hết đã hết hàng vui lòng chọn sản phẩm khác");
        }
    }

    static void fillToCart(DefaultTableModel model, JTable tbl) {
        totalMoney = 0;
        model = (DefaultTableModel) tbl.getModel();
        model.setRowCount(0);
        if (listCart.size() > 0) {
            List<CartModel> listEmpty = listCart.stream().filter(c -> c.getListImeis().isEmpty()).toList();
            if (listEmpty.size() > 0) {
                CartModel cartRemove = listEmpty.get(0);
                listCart.remove(cartRemove);
                lblTongTien.setText("Tổng tiền: " + UtilityService.toVnd(totalMoney));
            }
            if (listCart.size() > 0) {
                for (CartModel ca : listCart) {
                    totalMoney += ca.getGia() * ca.getListImeis().size();
                    JLabel imageLabel = new JLabel();
                    File path = new File("logos", ca.getHinh());
                    ImageIcon imageicon = new ImageIcon(path.getAbsolutePath());
                    Image img = imageicon.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH);
                    imageLabel.setIcon(new ImageIcon(img));
                    model.addRow(new Object[]{
                        ca.getMactsp(),
                        imageLabel,
                        ca.getTensp(),
                        UtilityService.toVnd(ca.getGia()),
                        ca.getListImeis().size(),
                        UtilityService.toVnd(Float.parseFloat(ca.getListImeis().size() + "") * ca.getGia()),
                        "Xem"
                    });
                }
                lblTongTien.setText("Tổng tiền: " + UtilityService.toVnd(totalMoney));
            }
        }
    }

    void delete() {
        int idcthd = (int) tblHoaDon.getValueAt(rowHoaDon, 0);
        try {
            cTHoaDonService.delete(idcthd);
            MessageService.alert(this, "yeaehhhh");
        } catch (Exception e) {
            MessageService.alert(this, "loi xoa");
        }
    }

    void edit() {

    }

    void insert(boolean isSave) {
        DalHoaDon dalHoaDon = this.getFormHoaDon();
        if (!isSave) {
            dalHoaDon.setNgayThanhToan(new Date());
            dalHoaDon.setTienKhachTra(totalMoney);
        }
        try {
//            thêm vào hóa đơn
            hoaDonService.insert(dalHoaDon);
//            lấy mã hóa đơn vừa thêm vào
            int lastID = hoaDonService.selectLasID();
            if (lastID > 0) {
//                thêm vào hóa đơn chi tiết
                listCart.forEach(ca -> {
//                    Thêm từng imei vào chi tiết hóa đơn dong thoi update imei thanh da ban
                    for (DalImeiModel imei : ca.getListImeis()) {
                        DalChiTietHoaDon dalChiTietHoaDon = new DalChiTietHoaDon();
                        dalChiTietHoaDon.setMaImei(imei.getMaImei());
                        dalChiTietHoaDon.setMahd(lastID);
                        dalChiTietHoaDon.setGiaBanSauSale(ca.getGia());
                        try {
                            cTHoaDonService.insert(dalChiTietHoaDon);
                            BusImeiService.updateStatusSell(imei.getMaImei(), 0);
//                            0: Đã bán
//                            1: Chưa bán
                        } catch (Exception e) {
                            System.out.println("error insert" + ca.getMactsp());
                        }
                    }
                    BusCTSanPhamModel sp = listSp.stream().filter(s -> s.getMaCTSP() == ca.getMactsp()).toList().get(0);
//                    cập nhật lại stock của ctsanpham
                    sanPhamService.updateStock(ca.getMactsp(), sp.getTonKho());
                });
                this.clearHoaDon();

//                this.getDataHoaDon();
                MessageService.alert(this, "yeahhh");
            }

        } catch (Exception e) {
        }
    }

    public DalHoaDon getFormHoaDon() {
        DalHoaDon dalHoaDon = new DalHoaDon();
        KhachHangModel kh = (KhachHangModel) cboKhachHang.getSelectedItem();
        dalHoaDon.setMakh(kh.getMaKH());
        if (rdoShipHang.isSelected()) {
            dalHoaDon.setDiaChiNhanHang(txtDiahChiKh.getText());
            dalHoaDon.setNgayGiaoHang(txtNgayGiaoHang.getDate());
            dalHoaDon.setPhiVanChuyen(Float.parseFloat(txtTienShip.getText()));
            totalMoney += Float.parseFloat(txtTienShip.getText());
        } else {
            dalHoaDon.setDiaChiNhanHang(null);
            dalHoaDon.setNgayGiaoHang(null);
            dalHoaDon.setPhiVanChuyen(0);
        }
        dalHoaDon.setManv(currentUser.getMaNV());
        dalHoaDon.setGhiChu(txtGhiChu.getText());
        dalHoaDon.setTongTien(totalMoney);
        dalHoaDon.setTienKhachTra(Float.parseFloat(txtKhachThanhToan.getText()));
        return dalHoaDon;
    }
    static int currentSLCart;
    boolean isUpdatingHoaDon = false;

    void fillButtonHoaDonToPannel() {
        jpnHoaDonInDate.removeAll();
        jpnHoaDonTreo.removeAll();
        List<BusHoaDon> listBtnHD = hoaDonService.selectButtonHd();
        if (listBtnHD.size() > 0) {
            JPanel panelTreo = new JPanel();
            JPanel panel1InDate = new JPanel();
            for (BusHoaDon hoaDon : listBtnHD) {
                JButton btn = new JButton("HD0" + hoaDon.getMahd() + "");
                btn.addActionListener((ActionEvent e) -> {
                    setFormHoaDon(Integer.parseInt(btn.getText().substring(3)));
                    isUpdatingHoaDon = true;
                });
                btn.setPreferredSize(new Dimension(50, 70));
                btn.setSize(new Dimension(50, 70));
                btn.setFont(new Font("Segoe UI", Font.BOLD, 16));
                btn.setBackground(Color.GREEN);
                if (hoaDon.getTongTien() != hoaDon.getTienKhachTra()) {
                    btn.setBackground(Color.RED);
                    JButton btnTreo = new JButton("HD0" + hoaDon.getMahd() + "");
                    btnTreo.addActionListener((ActionEvent e) -> {
                        setFormHoaDon(Integer.parseInt(btnTreo.getText().substring(3)));
                        isUpdatingHoaDon = true;
                    });
                    btnTreo.setPreferredSize(new Dimension(50, 70));
                    btnTreo.setSize(new Dimension(50, 70));
                    btnTreo.setBackground(Color.RED);
                    btnTreo.setFont(new Font("Segoe UI", Font.BOLD, 16));
                    panelTreo.add(btnTreo);
                }
                if (DateService.toString(hoaDon.getNgayTao(), "yyyy-MM-dd").equals(DateService.toString(new Date(), "yyyy-MM-dd"))) {
                    panel1InDate.add(btn);
                }
            }
            //            fill button in hoa don treo
            GridLayout gridLayoutTreo = new GridLayout(listBtnHD.size() < 6 ? 6 : listBtnHD.size(), 1, 0, 2);
            panelTreo.setLayout(gridLayoutTreo);
            JScrollPane scrollPaneTreo = new JScrollPane(panelTreo);
            scrollPaneTreo.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            scrollPaneTreo.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
            scrollPaneTreo.setBounds(10, 10, 180, 250);
            jpnHoaDonTreo.setPreferredSize(new Dimension(180, 250));
            jpnHoaDonTreo.add(scrollPaneTreo);

            //            fill button in hoa don trong ngay
            GridLayout gridLayoutInDate = new GridLayout(listBtnHD.size() < 5 ? 5 : listBtnHD.size(), 1, 0, 2);
            panel1InDate.setLayout(gridLayoutInDate);
            JScrollPane scrollPaneInDate = new JScrollPane(panel1InDate);
            scrollPaneInDate.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
            scrollPaneInDate.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
            scrollPaneInDate.setBounds(10, 10, 180, 250);
            jpnHoaDonInDate.setPreferredSize(new Dimension(180, 250));
            jpnHoaDonInDate.add(scrollPaneInDate);

        }
    }
    int currentHoaDonSelected;

    void setFormHoaDon(int maHd) {
        removeAllImei();
        try {
            BusHoaDon hoaDon = hoaDonService.selectByMahd(maHd, 1);
            List<CartModel> carts = sanPhamService.selectSpByMahd(maHd);
            if (carts.size() > 0) {
                carts.forEach(cart -> {
                    List<DalImeiModel> dalImeiModels = BusImeiService.getImeisByMactspAndMahd(cart.getMactsp(), maHd);
                    cart.setListImeis(dalImeiModels);
                    listCart.add(cart);
                });
            }
            fillToCart(cartModel, tblCart);

            cboKhachHang.getModel().setSelectedItem(
                    listKhachHang.
                            stream().
                            filter(kh -> kh.getMaKH() == hoaDon.getKhachHangModel().getMaKH())
                            .toList()
                            .get(0));
            txtNhanVien.setText(hoaDon.getNhanVienModel().getMaNV());
            txtGhiChu.setText(hoaDon.getGhiChu());
//            currentHoaDonSelected = hoaDon.getMahd();
            txtDiahChiKh.setText(hoaDon.getDiaChiNhanHang());
            if (hoaDon.getPhiVanChuyen() > 0) {
                rdoShipHang.setSelected(true);
            } else {
                rdoKhongGiao.setSelected(true);
            }
            txtTienShip.setText(hoaDon.getPhiVanChuyen() + "");
            txtKhachThanhToan.setText(hoaDon.getTienKhachTra() + "");
            totalMoney = hoaDon.getTongTien();
            lblTongTien.setText("Tổng tiền: " + UtilityService.toVnd(totalMoney));
        } catch (Exception e) {
        }
    }

    void removeCart() {
        int rowCart = tblCart.getSelectedRow();
        CartModel cart = listCart.get(rowCart);
        new RemoveImeiHoaDon(cart, rowCart).setVisible(true);
    }

    void sortDesc() {
        Collections.sort(listSp, comparator);
        fillTable(listSp);
    }

    void sortAsend() {
        Collections.sort(listSp, comparator);
        Collections.reverse(listSp);
        fillTable(listSp);
    }

    void fillToComboKhachHang() {
        khachHangModel = (DefaultComboBoxModel) cboKhachHang.getModel();
        khachHangModel.removeAllElements();
        try {
            listKhachHang = khachHangService.selectToFillCombo();
            listKhachHang.forEach(kh -> {
                khachHangModel.addElement(kh);
            });
            cboKhachHang.getModel().setSelectedItem(null);
        } catch (Exception e) {
        }
    }

    private void buttonAdd() {
        Action add = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                addToCart();
            }
        };
        ButtonColumn buttonColumn = new ButtonColumn(tblSanPham, add, 5);
        buttonColumn.setMnemonic(KeyEvent.VK_D);
    }

    private void buttonRemoveHoaDon() {
        Action add = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int row = tblHoaDon.getSelectedRow();
                currentHoaDonSelected = (int) tblHoaDon.getValueAt(row, 0);
                if(cboSelected == 3) {
                    if(MessageService.confirm(null, "Co muon khoi phuc hoa don ko")) {
                        hoaDonService.updateStatus(1, currentHoaDonSelected);
                        MessageService.alert(null, "back up  ok");
                    }
                } else {
                    if(MessageService.confirm(null, "Co muon xoa hoa don ko")) {
                        hoaDonService.updateStatus(0, currentHoaDonSelected);
                        MessageService.alert(null, "Xoa ok");
                    }
                }
                fillButtonHoaDonToPannel();
                clearHoaDon();
                getDataHoaDon(cboSelected);
                fillTableHoaDon(hoaDonModel, tblHoaDon, listHoaDon);
            }
        };
        ButtonColumn buttonColumn = new ButtonColumn(tblHoaDon, add, 8);
        buttonColumn.setMnemonic(KeyEvent.VK_D);
    }

    private void buttonRemove() {
        Action remove = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                removeCart();
            }
        };

        ButtonColumn buttonColumn = new ButtonColumn(tblCart, remove, 6);

        buttonColumn.setMnemonic(KeyEvent.VK_D);
    }

    void removeAllImei() {
        if (listCart.size() > 0) {
            listCart.stream().filter(cart -> (cart.getListImeis().size() > 0)).forEachOrdered(cart -> {
                cart.getListImeis().forEach(imei -> {
                    BusImeiService.updateStatusSell(imei.getMaImei(), 1);
                });
            });
        }
        listCart.clear();
    }

    void clearHoaDon() {
        removeAllImei();
        cboKhachHang.getModel().setSelectedItem(null);
        txtDiahChiKh.setText("");
        txtGhiChu.setText("");
        totalMoney = 0;
        currentHoaDonSelected = -1;
        txtKhachThanhToan.setText("");
        txtTienShip.setText("");
        lblTongTien.setText(UtilityService.toVnd(0));
        QuanLyBanHang.listCart.clear();
        QuanLyBanHang.fillToCart(cartModel, tblCart);
        this.getProductData();
        fillTable(listSp);
    }

    public void addTableHeader() {
        modelSp = (DefaultTableModel) tblSanPham.getModel();
        cartModel = (DefaultTableModel) tblCart.getModel();
        tblSanPham.setFillsViewportHeight(true);
        tblSanPham.getColumn("Ảnh").setCellRenderer(new CellRenderer());
        tblCart.setFillsViewportHeight(true);
        tblCart.getColumn("Ảnh").setCellRenderer(new CellRenderer());
    }

    class CellRenderer implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table,
                Object value,
                boolean isSelected,
                boolean hasFocus,
                int row,
                int column) {

            TableColumn tb = tblSanPham.getColumn("Ảnh");
            tb.setMaxWidth(60);
            tb.setMinWidth(60);
            tblSanPham.setRowHeight(60);

            TableColumn cart = tblCart.getColumn("Ảnh");
            cart.setMaxWidth(60);
            cart.setMinWidth(60);
            tblCart.setRowHeight(60);
            return (Component) value;
        }

    }
}
